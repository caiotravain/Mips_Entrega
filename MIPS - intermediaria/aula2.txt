---parte 1
-- ROM_MIPS : entity work.ROMMIPS 
--           port map (Endereco => Endereco_rom, Dado => Saida_rom);
			 
			 
-- -- O port map completo do Program Counter.
-- PC : entity work.pc_counter   generic map (larguraDados => larguraEnderecos)
--       port map (DIN => saida_mux_proxpc, DOUT => Endereco_rom, ENABLE => '1', CLK => CLK, RST => '0');			 
			 

-- somaconstante :  entity work.somaConstante  generic map (larguraDados => larguraEnderecos, constante => 4)
--         port map( entrada => Endereco_rom, saida => Saida_soma_constante);
		  

-- mux_proxpc :  entity work.muxGenerico2x1 generic map (larguraDados => 32)
--         port map( entradaA_MUX => Saida_mux_beq,
--                  entradaB_MUX =>  imediato_jump,
--                  seletor_MUX => SEL_beq_jmp,
--                  saida_MUX => saida_mux_proxpc);




------ parte 2		  
-- Mux_banco_reg:  entity work.muxGenerico2x1 generic map (larguraDados => 5)
--         port map( entradaA_MUX => Endereco_reg1,
--                  entradaB_MUX =>  Endereco_reg2,
--                  seletor_MUX => SEL_rt_rd ,
--                  saida_MUX => saida_mux_banco);		  
 
					  
					  
-- BANCO_REG :  entity work.bancoReg   generic map (larguraDados => larguraDados, larguraEndBancoRegs => 5)
--           port map ( clk => CLK,
--               enderecoA => Endereco_reg0,
--               enderecoB => Endereco_reg1,
--               enderecoC => saida_mux_banco,
--               dadoEscritaC => saida_mux_ram,
--               escreveC => Habilita,
--               saidaA => dado_saida_reg0,
--               saidaB  => dado_saida_reg1);
				  
				  
					  
-- decoder :  entity work.decoderGeneric
--         port map( entrada => opcode,
--                  saida => saida_decoder);
				  
-- extende_signal <= imediato(15) & imediato(15) & imediato(15) & imediato(15) &
-- 					imediato(15) &imediato(15) &imediato(15) &imediato(15) &imediato(15)
-- 					&imediato(15) &imediato(15) &imediato(15) &imediato(15) &imediato(15) 
-- 					&imediato(15) &imediato(15)&imediato(15 downto 0);
					
					
				  
				  

-- Mux_entrada_b:  entity work.muxGenerico2x1 generic map (larguraDados => 32)
--         port map( entradaA_MUX => dado_saida_reg1,
--                  entradaB_MUX =>  extende_signal,
--                  seletor_MUX =>  SEL_rt_imed,
--                  saida_MUX => saida_mux_B);	


				  
-- ULA : entity work.ULASomaSub  generic map(larguraDados => larguraDados)
--           port map (entradaA => dado_saida_reg0, entradaB => saida_mux_B , saida => saida_ula, seletor => ULA_ctrl(1 downto 0), saida_z=> saida_zULA, inverte_B=>ULA_ctrl(2),inverte_A=>ULA_ctrl(3));		

			
-- Soma_beq :  entity work.somadorGenerico  generic map (larguraDados => 32)
--         port map( entradaA => Saida_soma_constante, entradaB =>  extende_signal_beq, saida => saida_soma_beq);			 
			 
			 
			 
-- Mux_beq :  entity work.muxGenerico2x1 generic map (larguraDados => 32)
--         port map( entradaA_MUX => Saida_soma_constante,
--                  entradaB_MUX =>  saida_soma_beq,
--                  seletor_MUX => signal_beq,
--                  saida_MUX => Saida_mux_beq);
		

-- ula_control: entity work.ula_control
--         port map( opcode => saida_decoder(14 downto 9),
-- 						funct => imediato(5 downto 0),
-- 						tipo_r => saida_decoder(4),
--                  ULA_ctrl => ULA_ctrl);
					  

           				
				
-- parte 4
			 
-- Mux_beq :  entity work.muxGenerico2x1 generic map (larguraDados => 32)
--         port map( entradaA_MUX => Saida_soma_constante,
--                  entradaB_MUX =>  saida_soma_beq,
--                  seletor_MUX => signal_beq,
--                  saida_MUX => Saida_mux_beq);	

-- RAM : entity work.RAMMIPS 
--           port map (Endereco => saida_ula, we => WR, re => RE, habilita  => '1', dado_in => dado_saida_reg1, dado_out => saida_ram, clk => CLK);

		